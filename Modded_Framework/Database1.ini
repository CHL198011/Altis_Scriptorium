[Default]

Version = 1
;; Used incase there is ever a breaking change, or to inform user in log about a new feature.

Strip Chars = ";[]"
;; List of characters to strip out
Strip Chars Mode = 0
;; 0 = Strip Bad Chars, 1 = Strip + Log Bad Chars, 2 = Return Error & Log Bad Chars
;;     Note: Logging on works when sending data to database.

Input SQF Parser = false
;; Expermential
;;   If enabled will use SQF Array Parser instead of : seperator for values
;;   i.e   0:SQL:UpdatePlayer:["Joe",[1,2,0],0.22333,"PlayerBackpack",-3]
;;   Advantage is that you don't need to strip : seperator from user inputted values

[insertVehicle]
SQL1_1 = INSERT INTO vehicles (faction, classname, type, pid, plate, customisation) VALUES (?,?,?,?,?,?);
SQL1_INPUTS = 1,2,3,4,5,6

[checkPlate]
SQL1_1 = SELECT plate FROM vehicles WHERE plate=?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING

[deleteVehicle]
SQL1_1 = DELETE FROM vehicles WHERE plate=?;
SQL1_INPUTS = 1

[storeVehicle]
SQL1_1 = UPDATE vehicles SET active=0, fuel=?, damage=?, impounded=? WHERE plate=?;
SQL1_INPUTS = 1,2,3,4

[fetchGarage]
SQL1_1 = SELECT classname, plate, customisation FROM vehicles WHERE pid=? AND active=0 AND faction=? AND type=? AND impounded=?;
SQL1_INPUTS = 1,2,3,4
OUTPUT = 1-STRING,2-STRING,3

[fetchVehicle]
SQL1_1 = SELECT classname, customisation, fuel, damage FROM vehicles WHERE pid=? AND plate=?;
SQL1_INPUTS = 1,2
OUTPUT = 1-STRING,2,3,4

[setVehicleActive]
SQL1_1 = UPDATE vehicles SET active=1 WHERE pid=? AND plate=?;
SQL1_INPUTS = 1,2

[selectPlayer]
SQL1_1 = SELECT id, cash, bank, copLevel, medLevel, dojLevel, donorLevel, licenses, jailStats, civGear, stats, alive, position, phoneNumber, phoneContacts, phoneSettings, skills FROM players WHERE pid=?;
SQL1_INPUTS = 1
OUTPUT = 1,2,3,4,5,6,7,8,9,10,11,12,13,14-STRING,15,16

[checkNumber]
SQL1_1 = SELECT phoneNumber FROM players WHERE phoneNumber=?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING

[insertPlayer]
SQL1_1 = INSERT INTO players (pid, name, phoneNumber) VALUES (?,?,?);
SQL1_INPUTS = 1,2,3

[selectCop]
SQL1_1 = SELECT copGear, copDepartment FROM players WHERE pid=?;
SQL1_INPUTS = 1
OUTPUT = 1,2

[selectMedic]
SQL1_1 = SELECT medGear, medDepartment FROM players WHERE pid=?;
SQL1_INPUTS = 1
OUTPUT = 1,2

[selectCiv]
SQL1_1 = SELECT civGear FROM players WHERE pid=?;
SQL1_INPUTS = 1
OUTPUT = 1

[updateFullCop]
SQL1_1 = UPDATE players SET name=?, cash=?, bank=?, licenses=?, copGear=?, jailStats=?, stats=?, phoneContacts=?, phoneSettings=?, skills=? WHERE pid=?;
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9,10,11

[updateFullMedic]
SQL1_1 = UPDATE players SET name=?, cash=?, bank=?, licenses=?, medGear=?, jailStats=?, stats=?, phoneContacts=?, phoneSettings=?, skills=? WHERE pid=?;
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9,10,11

[updateFullCiv]
SQL1_1 = UPDATE players SET name=?, cash=?, bank=?, licenses=?, civGear=?, jailStats=?, stats=?, phoneContacts=?, phoneSettings=?, skills=? WHERE pid=?;
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9,10,11

[updateCopRank]
SQL1_1 = UPDATE players SET copLevel=?, copDepartment =? WHERE pid=?;
SQL1_INPUTS = 1,2,3

[updateMedicRank]
SQL1_1 = UPDATE players SET medLevel=?, medDepartment =? WHERE pid=?;
SQL1_INPUTS = 1,2,3

[updateMoney]
SQL1_1 = UPDATE players SET cash=?, bank=? WHERE pid=?;
SQL1_INPUTS = 1,2,3

[updateLicenses]
SQL1_1 = UPDATE players SET licenses=? WHERE pid=?;
SQL1_INPUTS = 1,2

[clientDisconnect]
SQL1_1 = UPDATE players SET alive=?, position=? WHERE pid=?;
SQL1_INPUTS = 1,2,3

[resetPositions]
SQL1_1 = UPDATE players SET alive=0 WHERE alive=1;

[resetVehicles]
SQL1_1 = UPDATE vehicles SET active=0, impounded=0 WHERE active=1;

[updateJail]
SQL1_1 = UPDATE players SET jailStats=? WHERE pid=?;
SQL1_INPUTS = 1,2

[updateStats]
SQL1_1 = UPDATE players SET stats=? WHERE pid=?;
SQL1_INPUTS = 1,2

[updatePhone]
SQL1_1 = UPDATE players SET phoneSettings=?, phoneContacts=? WHERE pid=?;
SQL1_INPUTS = 1,2,3

[updateSkills]
SQL1_1 = UPDATE players SET skills=? WHERE pid=?;
SQL1_INPUTS = 1,2

[updateCopGear]
SQL1_1 = UPDATE players SET copGear=? WHERE pid=?;
SQL1_INPUTS = 1,2

[updateMedicGear]
SQL1_1 = UPDATE players SET medGear=? WHERE pid=?;
SQL1_INPUTS = 1,2

[updateCivGear]
SQL1_1 = UPDATE players SET civGear=? WHERE pid=?;
SQL1_INPUTS = 1,2

[insertBuilding]
SQL1_1 = INSERT INTO houses (pid, pos, type) VALUES (?,?,?);
SQL1_INPUTS = 1,2,3

[initShops]
SQL1_1 = SELECT id, companyName, pos, items, funds FROM shops;
OUTPUT = 1-STRING,2,3

[insertShop]
SQL1_1 = INSERT INTO shops (companyName, pos) VALUES (?,?);
SQL1_INPUTS = 1,2

[insertedBuilding]
SQL1_1 = SELECT id FROM houses WHERE pos=? AND pid=?;
SQL1_INPUTS = 1,2
OUTPUT = 1

[insertedShop]
SQL1_1 = SELECT id FROM shops WHERE pos=? AND pid=?;
SQL1_INPUTS = 1,2
OUTPUT = 1

[updateShop]
SQL1_1 = UPDATE shops SET items=?, funds=?, WHERE id=?;
SQL1_INPUTS = 1,2,3

[fetchHouses]
SQL1_1 = SELECT pos, furniture FROM houses WHERE pid=?;
SQL1_INPUTS = 1
OUTPUT = 1,2

[getFurniture]
SQL1_1 = SELECT furniture FROM houses WHERE id=?;
SQL1_INPUTS = 1
OUTPUT = 1

[updateFurniture]
SQL1_1 = UPDATE houses SET furniture=? WHERE id=?;
SQL1_INPUTS = 1,2

[initHouses]
SQL1_1 = SELECT id, pid, pos, alarm, shared FROM houses;
OUTPUT = 1,2-STRING,3,4,5


[updateHouseGarage]
SQL1_1 = UPDATE houses SET garage=? WHERE pid=? AND pos=?;
SQL1_INPUTS = 1,2,3

[deleteCompany]
SQL1_1 = DELETE FROM companies WHERE id=?;
SQL1_INPUTS = 1

[fetchCompanies]
SQL1_1 = SELECT id, name, employees FROM companies WHERE active=1;
OUTPUT = 1,2-STRING,3

[populateCompanies]
SQL1_1 = SELECT id, name, description, owner_name FROM companies WHERE active=1;
OUTPUT = 1,2-STRING,3-STRING,4-STRING

[insertCompany]
SQL1_1 = INSERT INTO companies (owner, owner_name, name, description, employees) VALUES (?,?,?,?,?);
SQL1_INPUTS = 1,2,3,4,5

[selectCompanyFunds]
SQL1_1 = SELECT bank FROM companies WHERE id=?;
SQL1_INPUTS = 1

[addCompanyFunds]
SQL1_1 = UPDATE companies SET bank=? WHERE id=?;
SQL1_INPUTS = 1

[removeCompanyFunds]
SQL1_1 = UPDATE companies SET bank=? WHERE id=?;
SQL1_INPUTS = 1

[updateCompanyDescription]
SQL1_1 = UPDATE companies SET description=? WHERE id=?;
SQL1_INPUTS = 1,2,3

[selectCompanyEmployees]
SQL1_1 = SELECT employees FROM companies WHERE id=?;
SQL1_INPUTS = 1

[updateCompanyEmployee]
SQL1_1 = UPDATE companies SET employees=? WHERE id=?;
SQL1_INPUTS = 1

[fetchArrests]
SQL1_1 = SELECT crimes, officer, time, bail, insert_time FROM pd_db_arrests WHERE name=?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING,3,4,5

[fetchTickets]
SQL1_1 = SELECT crimes, officer, cost, insert_time FROM pd_db_tickets WHERE name=?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING,3,4

[fetchWarrants]
SQL1_1 = SELECT id, name, crimes, officer, notes, type, approved, active, insert_time FROM pd_db_warrants WHERE name=?;
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3-STRING,4-STRING,5-STRING,6,7,8,9

[checkWarrants]
SQL1_1 = SELECT id, name FROM pd_db_warrants WHERE name=?;
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING

[populateWarrants]
SQL1_1 = SELECT id, name, crimes, officer, notes, type, approved, insert_time FROM pd_db_warrants WHERE active=1;
OUTPUT = 1,2-STRING,3-STRING,4-STRING,5-STRING,6,7,8

[insertWarrant]
SQL1_1 = INSERT INTO pd_db_warrants (name, crimes, officer, notes, type) VALUES (?,?,?,?,?);
SQL1_INPUTS = 1,2,3,4,5

[insertArrest]
SQL1_1 = INSERT INTO pd_db_arrests (name, crimes, officer, time, bail) VALUES (?,?,?,?,?);
SQL1_INPUTS = 1,2,3,4,5

[insertTicket]
SQL1_1 = INSERT INTO pd_db_tickets (name, crimes, officer, cost) VALUES (?,?,?,?);
SQL1_INPUTS = 1,2,3,4

[logAction]
SQL1_1 = INSERT INTO logs (pid, name, action) VALUES (?,?,?);
SQL1_INPUTS = 1,2,3

[selectPersisVars]
SQL1_1 = SELECT threat, mayor, tax, bank FROM persis_vars;
OUTPUT = 1-STRING,2-STRING,3,4